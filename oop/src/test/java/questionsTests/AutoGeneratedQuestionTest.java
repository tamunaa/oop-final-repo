package questionsTests;

import objects.questions.AutoGeneratedQuestion;
import org.junit.jupiter.api.Test;

import java.util.HashSet;
import java.util.List;
import java.util.Random;
import java.util.Set;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class AutoGeneratedQuestionTest {

    @Test
    public void testGetQuestion() {
        Random random = new Random();
        AutoGeneratedQuestion question1 = new AutoGeneratedQuestion();
        AutoGeneratedQuestion question2 = new AutoGeneratedQuestion();
        AutoGeneratedQuestion question3 = new AutoGeneratedQuestion();
        System.out.println(question1.getQuestion());
        System.out.println(question2.getQuestion());
        System.out.println(question3.getQuestion());
    }

    @Test
    public void testGetOptions(){
        Random random = new Random();
        AutoGeneratedQuestion question1 = new AutoGeneratedQuestion();
        System.out.println(question1.getQuestion());
        for(int i = 0; i < 4; i ++)System.out.println(question1.getOptions()[i]);
        assertEquals(question1.getOptions().length, 4);
        AutoGeneratedQuestion question2 = new AutoGeneratedQuestion();
        System.out.println(question2.getQuestion());
        assertEquals(question2.getOptions().length, 4);
        for(int i = 0; i < 4; i ++)System.out.println(question2.getOptions()[i]);
        AutoGeneratedQuestion question3 = new AutoGeneratedQuestion();
        System.out.println(question3.getQuestion());
        assertEquals(question3.getOptions().length, 4);
        for(int i = 0; i < 4; i ++)System.out.println(question3.getOptions()[i]);
    }


    @Test
    public void testGetCorrectAnswer() {
        Random random = new Random();
        AutoGeneratedQuestion question1 = new AutoGeneratedQuestion();
        System.out.println(question1.getQuestion());
        System.out.println(String.format("Correct answer: " + question1.getCorrectAnswers()[0]));
        assertTrue(question1.getCorrectAnswers()[0].equals(question1.getOptions()[question1.getCorrectOptionIndex()]));

        AutoGeneratedQuestion question2 = new AutoGeneratedQuestion();
        System.out.println(question2.getQuestion());
        System.out.println(String.format("Correct answer: " + question2.getCorrectAnswers()[0]));
        assertTrue(question2.getCorrectAnswers()[0].equals(question2.getOptions()[question2.getCorrectOptionIndex()]));

        AutoGeneratedQuestion question3 = new AutoGeneratedQuestion();
        System.out.println(question3.getQuestion());
        System.out.println(String.format("Correct answer: " + question3.getCorrectAnswers()[0]));
        assertTrue(question3.getCorrectAnswers()[0].equals(question3.getOptions()[question3.getCorrectOptionIndex()]));
    }

    @Test
    public void testOptionsAreDifferent() {
        Random random = new Random();
        AutoGeneratedQuestion question = new AutoGeneratedQuestion();
        System.out.println(question.getQuestion());
        Set<String> allOptions = new HashSet<>();
        allOptions.addAll(List.of(question.getOptions()));
        for(int i = 0; i < question.getOptions().length; i++) System.out.println(question.getOptions()[i]);
        // Ensure that all options are unique across the questions
        assertEquals(4, allOptions.size());
    }
    @Test
    public void RunTestMultipleTimes(){
        for(int i = 0; i < 40; i++)testOptionsAreDifferent();
    }
}
